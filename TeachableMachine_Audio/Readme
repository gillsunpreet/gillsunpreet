Teachable Machine Audio Recognition with Arduino

This project uses TensorFlow Lite, PyAudio, and an Arduino to recognize audio commands (Claps, Snaps, Whistles, Background Noise) and control LEDs on an Arduino board.

Project Structure:
- TeachableMachine_Audio/
  - ArduinoCode/  -> Arduino code for controlling LEDs
  - PythonScriptForAudioRecognition/  -> Python script for sound classification
  - TrainedAudioModel/  -> Pre-trained TensorFlow Lite model (ssm.tflite)
  - README.md  -> Project documentation

How It Works:
1. The Python script (audio_recognition.py) captures real-time audio using PyAudio.
2. The trained TensorFlow Lite model (ssm.tflite) classifies the sounds.
3. If the model detects a sound, it sends a command to the Arduino over a serial connection (COM12).
4. The Arduino reads the command and turns on the corresponding LED:
   - Clap -> Quick flashes
   - Snap -> Two longer blinks
   - Whistle -> Short pulses
   - Background Noise -> Steady blink

Setup Instructions:
1. Install Python Dependencies:
   pip install pyaudio numpy tensorflow pyserial

2. Upload the Arduino Code:
   - Connect LEDs to pins 10, 11, 12, and 13.
   - Open the Arduino IDE, load the ArduinoCode.ino file, and upload it to your board.

3. Run the Python Script:
   python audio_recognition.py

Troubleshooting:
- If no sound is detected, check if the microphone is working.
- If the Arduino is not responding, ensure COM12 is the correct serial port.

License:
This project is open-source. Modify and improve as needed.
